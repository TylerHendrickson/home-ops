---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: storage
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2023-02-22T18-23-45Z
    env:
      TZ: America/Chicago
      MINIO_UPDATE: "off"
      MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
      MINIO_SERVER_URL: "https://s3.${SECRET_DOMAIN}"
      MINIO_API_CORS_ALLOW_ORIGIN: "https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}"
      # MINIO_PROMETHEUS_URL: http://kube-prometheus-stacks-prometheus.monitoring:9090
      # MINIO_PROMETHEUS_JOB_ID: minio
      # MINIO_IDENTITY_OPENID_CONFIG_URL: "https://auth.${SECRET_DOMAIN}/.well-known/openid-configuration"
      # MINIO_IDENTITY_OPENID_CLIENT_ID: minio
      # MINIO_IDENTITY_OPENID_CLIENT_SECRET: "${SECRET_MINIO_OAUTH_CLIENT_SECRET}"
      # MINIO_IDENTITY_OPENID_SCOPES: "openid,profile,email,groups"
      # MINIO_IDENTITY_OPENID_REDIRECT_URI: "https://minio.${SECRET_DOMAIN}/oauth_callback"
    envFrom:
      - secretRef:
          name: minio
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: &api-port 9000
#    serviceMonitor:
#      main:
#        enabled: true
#        endpoints:
#          - port: api
#            scheme: http
#            path: /minio/v2/metrics/cluster
#            interval: 1m
#            scrapeTimeout: 10s
#            bearerTokenSecret:
#              name: minio-secret
#              key: MINIO_PROMETHEUS_TOKEN
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /minio/health/live
            port: *api-port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-body-size: 5000m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
        hosts:
          - host: &console-host "minio.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *console-port
          - host: &api-host "s3.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *api-port
        tls:
          - hosts:
              - *console-host
              - *api-host
            secretName: minio-tls
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      supplementalGroups:
        - 100
        - 1000
        - 1001
    persistence:
      config:
        enabled: true
        type: pvc
        existingClaim: minio-nas
        mountPath: /data
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: NotIn
                  values:
                    - "true"
